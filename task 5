const { EventEmitter } = require("events");

const emitter = new EventEmitter();

emitter.on("data", (data) => console.log(`Received: ${data}`));

setTimeout(() => emitter.emit("data", "Message 1"), 1000);
setTimeout(() => emitter.emit("data", "Message 2"), 2000);

const { Observable } = require("rxjs");

const messageObservable = new Observable((subscriber) => {
    subscriber.next("Message 1");
    setTimeout(() => subscriber.next("Message 2"), 1000);
    setTimeout(() => subscriber.error(new Error("Something went wrong")), 2000);
    setTimeout(() => subscriber.next("Message 3"), 3000);
    setTimeout(() => subscriber.complete(), 4000);
});

const subscription = messageObservable.subscribe({
    next: (data) => console.log(`Received: ${data}`),
    error: (err) => console.error(`Error: ${err.message}`),
    complete: () => console.log("Stream complete"),
});

setTimeout(() => {
    subscription.unsubscribe();
    console.log("Unsubscribed from the observable");
}, 3500);

